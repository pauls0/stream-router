{
  "Transform": "AWS::Serverless-2016-10-31",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Stream Router",
  "Metadata": {},
  "Parameters": {
    "AdminConsoleRepository": {
      "Type": "String",
      "Description": "GitHub Repository URL",
      "Default": "https://github.com/pauls0/stream-router"
    },
    "AdminConsoleBranch": {
      "Type": "String",
      "Description": "Github Repository Branch",
      "Default": "main"
    },
    "AdminConsoleOauthToken": {
      "Type": "String",
      "Description": "GitHub OauthToken",
      "NoEcho": true
    },
    "AdminConsoleDomain": {
      "Type": "String",
      "Description": "Domain name to host application",
      "Default": ""
    }
  },
  "Mappings": {},
  "Conditions": {
    "UseCustomDomain": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "AdminConsoleDomain"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "BucketDeployment": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": { "Fn::Sub": "${AWS::StackName}-bucket-deployment" }
      }
    },
    "BucketAssets": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": { "Fn::Sub": "${AWS::StackName}-bucket-assets" }
      }
    },
    "RoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": { "Fn::Sub": "${AWS::StackName}-role-lambda" },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": "lambda.amazonaws.com" },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Sub": "${AWS::StackName}-lambda-policy"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "RoutePolicy",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject",
                    "dynamodb:*"
                  ],
                  "Resource": [
                    { "Fn::GetAtt": ["BucketAssets", "Arn"] },
                    { "Fn::GetAtt": ["TableMappings", "Arn"] }
                  ]
                }
              ]
            }
          }
        ],
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "RoleAmplify": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["amplify.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "Amplify",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "amplify:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaRoute": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "MemorySize": 128,
        "Timeout": 10,
        "Role": {
          "Fn::GetAtt": ["RoleLambda", "Arn"]
        },
        "FunctionName": { "Fn::Sub": "${AWS::StackName}-lambda-route" },
        "CodeUri": {
          "Bucket": { "Ref": "BucketDeployment" },
          "Key": "lambda-route.zip"
        },
        "Events": {
          "GetRequest": {
            "Type": "Api",
            "Properties": {
              "Path": "/route",
              "Method": "GET"
            }
          }
        }
      }
    },
    "LambdaMappingGet": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "MemorySize": 128,
        "Timeout": 10,
        "Role": {
          "Fn::GetAtt": ["RoleLambda", "Arn"]
        },
        "FunctionName": { "Fn::Sub": "${AWS::StackName}-lambda-mapping-get" },
        "CodeUri": {
          "Bucket": { "Ref": "BucketDeployment" },
          "Key": "lambda-mapping-get.zip"
        },
        "Events": {
          "GetRequest": {
            "Type": "Api",
            "Properties": {
              "Path": "/mapping-get",
              "Method": "GET"
            }
          }
        }
      }
    },
    "LambdaMappingSet": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "MemorySize": 128,
        "Timeout": 10,
        "Role": {
          "Fn::GetAtt": ["RoleLambda", "Arn"]
        },
        "FunctionName": { "Fn::Sub": "${AWS::StackName}-lambda-mapping-set" },
        "CodeUri": {
          "Bucket": { "Ref": "BucketDeployment" },
          "Key": "lambda-mapping-set.zip"
        },
        "Events": {
          "PostRequest": {
            "Type": "Api",
            "Properties": {
              "Path": "/mapping-set",
              "Method": "POST"
            }
          }
        }
      }
    },
    "AmplifyAppAdminConsole": {
      "Type": "AWS::Amplify::App",
      "Properties": {
        "Name": { "Fn::Sub": "${AWS::StackName}-amplify-app-admin-console" },
        "Description": "Admin Console React App",
        "Repository": {
          "Ref": "AdminConsoleRepository"
        },
        "OauthToken": {
          "Ref": "AdminConsoleOauthToken"
        },
        "IAMServiceRole": {
          "Fn::GetAtt": ["RoleAmplify", "Arn"]
        },
        "BuildSpec": {
          "Fn::Join": [
            "",
            [
              "version: 1\n",
              "appRoot: /site-admin-console\n",
              "frontend:\n",
              "  phases:\n",
              "    test:\n",
              "      commands:\n",
              "        - yarn test\n",
              "    preBuild:\n",
              "      commands:\n",
              "        - yarn install\n",
              "    build:\n",
              "      commands:\n",
              "        - yarn run build\n",
              "  artifacts:\n",
              "    baseDirectory: build\n",
              "    files:\n",
              "      - '**/*'\n",
              "  cache:\n",
              "    paths:\n",
              "      - node_modules/**/*\n"
            ]
          ]
        }
      }
    },
    "AmplifyBranchAdminConsole": {
      "Type": "AWS::Amplify::Branch",
      "Properties": {
        "BranchName": {
          "Ref": "AdminConsoleBranch"
        },
        "AppId": {
          "Fn::GetAtt": ["AmplifyAppAdminConsole", "AppId"]
        },
        "EnableAutoBuild": true
      }
    },
    "AmplifyDomainAdminConsole": {
      "Type": "AWS::Amplify::Domain",
      "Condition": "UseCustomDomain",
      "Properties": {
        "DomainName": {
          "Ref": "AdminConsoleDomain"
        },
        "AppId": {
          "Fn::GetAtt": ["AmplifyAppAdminConsole", "AppId"]
        },
        "SubDomainSettings": [
          {
            "Prefix": "master",
            "BranchName": {
              "Fn::GetAtt": ["AmplifyBranchAdminConsole", "BranchName"]
            }
          }
        ]
      }
    },
    "TableMappings": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": { "Fn::Sub": "${AWS::StackName}-table-mappings" },
        "AttributeDefinitions": [
          {
            "AttributeName": "network",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "network",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    }
  },
  "Outputs": {
    "DefaultDomain": {
      "Value": {
        "Fn::GetAtt": ["AmplifyAppAdminConsole", "DefaultDomain"]
      },
      "Condition": "UseCustomDomain"
    }
  }
}
